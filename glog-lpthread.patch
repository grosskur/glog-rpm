Index: configure
===================================================================
--- configure	(revision 20)
+++ configure	(revision 21)
@@ -22818,7 +22818,80 @@
 ac_compiler_gnu=$ac_cv_c_compiler_gnu
 
 
+# To make libglog depend on libpthread on Linux, we need to add
+# -lpthread in addition to -pthread.
 
+{ echo "$as_me:$LINENO: checking for pthread_self in -lpthread" >&5
+echo $ECHO_N "checking for pthread_self in -lpthread... $ECHO_C" >&6; }
+if test "${ac_cv_lib_pthread_pthread_self+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lpthread  $LIBS"
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char pthread_self ();
+int
+main ()
+{
+return pthread_self ();
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval "echo \"\$as_me:$LINENO: $ac_try_echo\"") >&5
+  (eval "$ac_link") 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext &&
+       $as_test_x conftest$ac_exeext; then
+  ac_cv_lib_pthread_pthread_self=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_cv_lib_pthread_pthread_self=no
+fi
+
+rm -f core conftest.err conftest.$ac_objext conftest_ipa8_conftest.oo \
+      conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ echo "$as_me:$LINENO: result: $ac_cv_lib_pthread_pthread_self" >&5
+echo "${ECHO_T}$ac_cv_lib_pthread_pthread_self" >&6; }
+if test $ac_cv_lib_pthread_pthread_self = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define HAVE_LIBPTHREAD 1
+_ACEOF
+
+  LIBS="-lpthread $LIBS"
+
+fi
+
+
 # Check if there is google-gflags library installed.
 { echo "$as_me:$LINENO: checking for main in -lgflags" >&5
 echo $ECHO_N "checking for main in -lgflags... $ECHO_C" >&6; }
Index: src/config.h.in
===================================================================
--- src/config.h.in	(revision 20)
+++ src/config.h.in	(revision 21)
@@ -15,6 +15,9 @@
 /* Define to 1 if you have the <inttypes.h> header file. */
 #undef HAVE_INTTYPES_H
 
+/* Define to 1 if you have the `pthread' library (-lpthread). */
+#undef HAVE_LIBPTHREAD
+
 /* Define to 1 if you have the <libunwind.h> header file. */
 #undef HAVE_LIBUNWIND_H
 
Index: configure.ac
===================================================================
--- configure.ac	(revision 20)
+++ configure.ac	(revision 21)
@@ -83,6 +83,9 @@
 
 # Some of the code in this directory depends on pthreads
 ACX_PTHREAD
+# To make libglog depend on libpthread on Linux, we need to add
+# -lpthread in addition to -pthread.
+AC_CHECK_LIB(pthread, pthread_self)
 
 # Check if there is google-gflags library installed.
 AC_CHECK_LIB(gflags, main, ac_cv_have_libgflags=1, ac_cv_have_libgflags=0)
